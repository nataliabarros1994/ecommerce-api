events {
    worker_connections 1024;
}

http {
    upstream auth_service {
        server auth-service:5000;
    }

    upstream user_service {
        server user-service:5000;
    }

    upstream product_service {
        server product-service:5000;
    }

    upstream order_service {
        server order-service:5000;
    }

    upstream payment_service {
        server payment-service:5000;
    }

    upstream notification_service {
        server notification-service:5000;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;

    server {
        listen 80;
        server_name localhost;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;

        # API Gateway health check
        location /health {
            return 200 '{"status": "healthy", "service": "api-gateway"}';
            add_header Content-Type application/json;
        }

        # Auth Service
        location /api/auth/ {
            limit_req zone=api_limit burst=20 nodelay;
            proxy_pass http://auth_service/api/auth/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # User Service
        location /api/users/ {
            limit_req zone=api_limit burst=20 nodelay;
            proxy_pass http://user_service/api/users/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Product Service
        location /api/products/ {
            limit_req zone=api_limit burst=30 nodelay;
            proxy_pass http://product_service/api/products/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Order Service
        location /api/orders/ {
            limit_req zone=api_limit burst=20 nodelay;
            proxy_pass http://order_service/api/orders/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Payment Service
        location /api/payments/ {
            limit_req zone=api_limit burst=10 nodelay;
            proxy_pass http://payment_service/api/payments/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Notification Service
        location /api/notifications/ {
            limit_req zone=api_limit burst=15 nodelay;
            proxy_pass http://notification_service/api/notifications/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Default error response
        location / {
            return 404 '{"error": "Endpoint not found"}';
            add_header Content-Type application/json;
        }
    }
}
